@techreport{cxx11_standard,
    author = {{The C++ Standards Committee}},                               
    title =  {{ISO International Standard ISO/IEC 14882:2011, Programming Language C++}},
    year = 2011,                                                            
    note = {http://www.open-std.org/jtc1/sc22/wg21},                        
    institution = {{Geneva, Switzerland: International Organization for Standardization (ISO).}},                                                     
}

@techreport{cxx14_standard,                                                 
    author = {{The C++ Standards Committee}},                               
    title =  {{ISO International Standard ISO/IEC 14882:2014, Programming Language C++}},
    year = 2014,                                                            
    note = {http://www.open-std.org/jtc1/sc22/wg21},                        
    institution = {{Geneva, Switzerland: International Organization for Standardization (ISO).}},                                                     
}                                                                           
@techreport{cxx17_standard,                                                 
    author = {{The C++ Standards Committee}},                               
    title =  {{ISO International Standard ISO/IEC 14882:2017, Programming Language C++}},
    year = 2017,                                                            
    note = {http://www.open-std.org/jtc1/sc22/wg21},                        
    institution = {{Geneva, Switzerland: International Organization for Standardization (ISO).}},                                                     
}  

@techreport{cxx20_standard,                                                 
    author = {{The C++ Standards Committee}},                               
    title =  {{ISO International Standard ISO/IEC 14882:2020, Programming Language C++}},
    year = 2020,                        
    institution = {{Geneva, Switzerland: International Organization for Standardization (ISO).}},                                 
}

@article{10.5555/1352079.1352134,
author = {Pheatt, Chuck},
title = {Intel® Threading Building Blocks},
year = {2008},
issue_date = {April 2008},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {23},
number = {4},
issn = {1937-4771},
abstract = {Intel® Threading Building Blocks [1] is a C++ runtime library that abstracts the low-level
threading details necessary for effectively utilizing multi-core processors. It uses
C++ templates to eliminate the need to create and manage threads. Applications tend
to be more portable since parallelism is achieved through library calls and utilization
of a task manager for scheduling. The task manager analyzes the system the software
is running on, chooses the optimal number of threads, and performs load balancing
that spreads out the work evenly across all processor cores. The library consists
of data structures and algorithms that simplify parallel programming in C++ by avoiding
requiring a programmer to use native threading packages such as POSIX threads or Windows
threads, or even the portable Boost Threads.},
journal = {J. Comput. Sci. Coll.},
month = apr,
pages = {298},
numpages = {1}
}

@article{dagum1998openmp,
    Author = {Dagum, Leonardo and Menon, Ramesh},
    Date-Added = {2014-07-24 11:13:01 +0000},
    Date-Modified = {2014-07-24 11:13:01 +0000},
    Journal = {Computational Science \& Engineering, IEEE},
    Number = {1},
    Pages = {46--55},
    Publisher = {IEEE},
    Title = {OpenMP: an industry standard API for shared-memory programming},
    Volume = {5},
    Year = {1998}}